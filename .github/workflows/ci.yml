name: Unity AI Agents CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Load .env variables
      uses: c-py/action-dotenv-to-setenv@v2
      with:
        env-file: '.env'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint Python code
      run: |
        pip install flake8
        flake8 agents utils --max-line-length=120

    - name: Run Python tests
      run: |
        python test-run.py || echo "‚ö† test-run.py failed ‚Äî continue pipeline"

    - name: dotnet build
      run: |
        if [ -z "$PROJECT_PATH" ]; then
          echo "‚ùå PROJECT_PATH is not set. Please define it in .env or as a secret."
          exit 1
        fi
        if [ ! -f "$PROJECT_PATH" ]; then
          echo "‚ùå PROJECT_PATH points to a file that does not exist: $PROJECT_PATH"
          exit 1
        fi
        echo "üöÄ Building project at $PROJECT_PATH"
        dotnet build "$PROJECT_PATH"

    - name: Validate project_map.json
      run: python tools/mapctl.py validate

    - name: dotnet tests with coverage
      run: |
        if [ -z "$PROJECT_PATH" ] || [ ! -f "$PROJECT_PATH" ]; then
          echo "‚ö† PROJECT_PATH is not set or does not exist. Skipping dotnet tests."
        else
          dotnet test "$PROJECT_PATH" --collect "XPlat Code Coverage"
        fi

    - name: Unity tests
      run: |
        if [ -z "$UNITY_CLI" ]; then
          echo "‚ö† UNITY_CLI is not set. Skipping Unity tests."
        else
          $UNITY_CLI -batchmode -runTests -projectPath . -testResults results.xml
        fi

    - uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log
        if-no-files-found: ignore

    - uses: actions/upload-artifact@v4
      with:
        name: unity-test-results
        path: results.xml
        if-no-files-found: ignore

    - uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: '**/coverage.cobertura.xml'
        if-no-files-found: ignore
